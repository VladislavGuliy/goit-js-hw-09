{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA8CA,SAASC,EAAqBC,GAC5BC,EAAAJ,GAASK,OAAOC,QACd,aAAaH,EAAMI,WAAWC,wC,CAIlC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EAEFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EA9DA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAeF,EAAMG,cAAcC,SACzC,IAAIC,EAAQC,OAAOJ,EAAad,MAAMmB,OACtC,MAAMC,EAAOF,OAAOJ,EAAaM,KAAKD,OAChCE,EAASH,OAAOJ,EAAaO,OAAOF,OAE1C,GAAIF,EAAQ,EAEV,YADA1B,EAAqBuB,EAAad,OAGpC,GAAIoB,EAAO,EAET,YADA7B,EAAqBuB,EAAaM,MAGpC,GAAIC,EAAS,EAEX,YADA9B,EAAqBuB,EAAaO,QAIpC,IAAK,IAAIC,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDxB,EAAcwB,EAAUL,GACrBM,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBP,EAAAJ,GAASK,OAAO8B,QACd,qBAAqBzB,QAAeC,MACrC,IAEFyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBP,EAAAJ,GAASK,OAAOgC,QACd,oBAAoB3B,QAAeC,MACpC,IAGLiB,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const formElements = event.currentTarget.elements;\n  let delay = Number(formElements.delay.value);\n  const step = Number(formElements.step.value);\n  const amount = Number(formElements.amount.value);\n\n  if (delay < 0) {\n    createWarningMessage(formElements.delay);\n    return;\n  }\n  if (step < 0) {\n    createWarningMessage(formElements.step);\n    return;\n  }\n  if (amount < 0) {\n    createWarningMessage(formElements.amount);\n    return;\n  }\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay += step;\n  }\n}\n\nfunction createWarningMessage(field) {\n  Notiflix.Notify.warning(\n    `The field ${field.parentNode.textContent} must be a positive number`\n  );\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createWarningMessage","field","$parcel$interopDefault","Notify","warning","parentNode","textContent","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","event","preventDefault","formElements","currentTarget","elements","delay1","Number","value","step","amount","position1","then","success","catch","failure"],"version":3,"file":"03-promises.21726cdf.js.map"}